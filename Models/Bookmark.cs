using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Security.Policy;
using static System.Runtime.InteropServices.JavaScript.JSType;

namespace reffffound.Models
{
	public class Bookmark
	{
		[Description( "Do not post, autogenerated." )]
		public int Id { get; set; }
		[Description( "Do not post, autogenerated." )]
		public string Guid { get; set; }
		public string Url { get; set; }
		public string Title { get; set; }
		public string Image { get; set; }
		public int Savedby { get; set; }
		public string Timestamp { get; set; }
		[Description( "Do not post, autogenerated." )]

		public string Context1link { get; set; }
		[Description( "Do not post, autogenerated." )]
		public string Context1img { get; set; }
		[Description( "Do not post, autogenerated." )]
		public string Context2link { get; set; }
		[Description( "Do not post, autogenerated." )]
		public string Context2img { get; set; }
		[Description( "Do not post, autogenerated." )]
		public string Context3link { get; set; }
		[Description( "Do not post, autogenerated." )]
		public string Context3img { get; set; }
		[Description( "Do not post, autogenerated." )]
		public string Usercontext { get; set; }

		[Description( "Deprecated" )]
		public string FullUrl { get; set; }

		[Description( "Only temporary Property, not being saved persistent to the Database." )]
		public string Username { get; set; }

		public Bookmark(string guid = "", string timestamp = "")
		{
			Guid = guid != "" ? guid : System.Guid.NewGuid( ).ToString( );
			Timestamp = timestamp != "" ? timestamp : DateTime.Now.ToString( DatetimeFormat.Standard );

			Savedby = 1;
			Context1img = Context1link =
			Context2img = Context2link =
			Context3img = Context3link =
			FullUrl = "";
		}


		public override string ToString()
		{
			return Id + ", " + Guid + ", " + Url + ", " + Title + ", " + Image + ", " + Timestamp + ", " + Savedby +
					 ", " + Usercontext + ", " + FullUrl
					 + ", " + Context1link + ", " + Context1img + ", " + Context2img + ", " + Context2link + ", " +
					 Context3img + ", " + Context3link;
		}



		public void UpdateFrom(IFormCollection collection, bool isAdminEdit = false)
		{
			var url = collection["Url"][0];
			var title = collection["Title"][0];
			var image = collection["Image"][0];

			if (!string.IsNullOrEmpty( url ) && !this.Url.Equals( url ))
			{
				Url = url;
			}
			if (!string.IsNullOrEmpty( title ) && !this.Title.Equals( title ))
			{
				Title = title;
			}
			if (!string.IsNullOrEmpty( image ) && !this.Image.Equals( image ))
			{
				Image = image;
			}

			if (isAdminEdit)
			{
				var username = collection["Username"][0];
				var savedby = collection["SavedBy"][0];
				var timestamp = collection["Timestamp"][0];
				var usercontext = collection["Usercontext"];

				if (!string.IsNullOrEmpty( username ) && !this.Username.Equals( username ))
				{
					Username = username;
				}

				if (!string.IsNullOrEmpty( savedby ) && !this.Savedby.Equals( savedby ))
				{
					Savedby = int.Parse( savedby );
				}

				if (!string.IsNullOrEmpty( timestamp ) && !this.Timestamp.Equals( timestamp ))
				{
					Timestamp = timestamp;
				}

				if (!string.IsNullOrEmpty( usercontext ))
				{
					Usercontext = usercontext;
				}
			}
		}



		/// <summary>
		/// Checks if current Data state is valid to Create or Update a bookmark
		/// Provides a message to the frontend in case something is invalid.
		/// </summary>
		/// <returns></returns>
		public bool IsValid(out string validationMessage)
		{
			bool isValid = true;
			validationMessage = string.Empty;

			if (string.IsNullOrWhiteSpace( Url ))
			{
				validationMessage = "Please provide an Url to link your bookmark to.";
				isValid = false;
			}
			if (string.IsNullOrWhiteSpace( Title ))
			{
				validationMessage = "Please provide a Title for your Bookmark.";
				isValid = false;
			}
			if (Title.Length > 256)
			{
				validationMessage = "Please shorten your title to maximum 256 charaters.";
				isValid = false;
			}
			if (string.IsNullOrWhiteSpace( Image ))
			{
				validationMessage = "Please provide link to your bookmarked Image.";
				isValid = false;
			}

			return isValid;
		}

		public bool DataEquals(Bookmark bookmark)
		{
			if (bookmark == null) return false;
			if (bookmark.Guid != this.Guid) return false;
			if (bookmark.Url != this.Url) return false;
			if (bookmark.Title != this.Title) return false;
			if (bookmark.Image != this.Image) return false;
			if (bookmark.Savedby != this.Savedby) return false;
			if (bookmark.Timestamp != this.Timestamp) return false;
			if (bookmark.Username != this.Username) return false;

			return true;
		}

	}
}
